{"version":3,"file":"static/js/884.2195b7f2.chunk.js","mappings":"iOAgDA,UA5CqB,WAAO,IAAD,EACzB,GAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,IACRE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACIC,EAAAA,EAAAA,IAAeJ,GADnB,OACXK,EADW,OAGjBN,EAASM,GAHQ,2CAAH,qDAKhBF,GACD,GAAE,CAACH,IACJ,IACkBM,EADFC,EAEVC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,KAChD,OACE,8BACGf,IACC,iCACE,SAAC,KAAD,CAAMgB,GAAIJ,EAASK,QAAnB,sBACA,gBACEC,IAAG,yCAAoClB,EAAMmB,aAC7CC,IAAKpB,EAAMqB,MACXC,MAAM,SAER,0BACGtB,EAAMqB,OACP,sCAhBMZ,EAgBaT,EAAMuB,aAhBTd,EAAOe,MAAM,EAAG,IAgBhC,YAEF,6CAAmBxB,EAAMyB,WAAzB,QACA,2CAAiBzB,EAAM0B,aACvB,0CAnBUlB,EAmBeR,EAAM2B,OAnBZnB,EAAMoB,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,WAoBtD,mDACA,SAAC,KAAD,CAAMd,GAAI,OAAV,oBACA,SAAC,KAAD,CAAMA,GAAI,UAAV,sBACA,SAAC,EAAAe,SAAD,CAAUC,UAAU,+BAApB,UACE,SAAC,KAAD,UAMX,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieById } from 'service/themoviedbAPI';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n\n  const { id } = useParams();\n  useEffect(() => {\n    const fetchMovie = async () => {\n      const result = await fetchMovieById(id);\n\n      setMovie(result);\n    };\n    fetchMovie();\n  }, [id]);\n  const getYear = string => string.slice(0, 4);\n  const getGenres = array => array.map(({ name }) => name).join(', ');\n  const location = useLocation();\n  const backLink = useRef(location.state?.from || '/');\n  return (\n    <>\n      {movie && (\n        <>\n          <Link to={backLink.current}>Go back</Link>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            alt={movie.title}\n            width=\"350\"\n          />\n          <h1>\n            {movie.title}\n            <span>{`(${getYear(movie.release_date)} )`}</span>\n          </h1>\n          <p>{`User score: ${movie.popularity}%`}</p>\n          <p>{`Overview: ${movie.overview}`}</p>\n          <p>{`Genres: ${getGenres(movie.genres)}`}</p>\n          <p>Additional information</p>\n          <Link to={'cast'}>Casts</Link>\n          <Link to={'reviews'}>Reviews</Link>\n          <Suspense fallback={<p>...</p>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["useState","movie","setMovie","id","useParams","useEffect","fetchMovie","fetchMovieById","result","array","string","location","useLocation","backLink","useRef","state","from","to","current","src","poster_path","alt","title","width","release_date","slice","popularity","overview","genres","map","name","join","Suspense","fallback"],"sourceRoot":""}